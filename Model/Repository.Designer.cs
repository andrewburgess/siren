#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class Repository : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAlbumGenre(AlbumGenre instance);
    partial void UpdateAlbumGenre(AlbumGenre instance);
    partial void DeleteAlbumGenre(AlbumGenre instance);
    partial void InsertAlbum(Album instance);
    partial void UpdateAlbum(Album instance);
    partial void DeleteAlbum(Album instance);
    partial void InsertArtistGenre(ArtistGenre instance);
    partial void UpdateArtistGenre(ArtistGenre instance);
    partial void DeleteArtistGenre(ArtistGenre instance);
    partial void InsertArtist(Artist instance);
    partial void UpdateArtist(Artist instance);
    partial void DeleteArtist(Artist instance);
    partial void InsertConfiguration(Configuration instance);
    partial void UpdateConfiguration(Configuration instance);
    partial void DeleteConfiguration(Configuration instance);
    partial void InsertGenre(Genre instance);
    partial void UpdateGenre(Genre instance);
    partial void DeleteGenre(Genre instance);
    partial void InsertImage(Image instance);
    partial void UpdateImage(Image instance);
    partial void DeleteImage(Image instance);
    partial void InsertMediaFile(MediaFile instance);
    partial void UpdateMediaFile(MediaFile instance);
    partial void DeleteMediaFile(MediaFile instance);
    partial void InsertMediaRepository(MediaRepository instance);
    partial void UpdateMediaRepository(MediaRepository instance);
    partial void DeleteMediaRepository(MediaRepository instance);
    partial void InsertPlay(Play instance);
    partial void UpdatePlay(Play instance);
    partial void DeletePlay(Play instance);
    partial void InsertSimilarAlbum(SimilarAlbum instance);
    partial void UpdateSimilarAlbum(SimilarAlbum instance);
    partial void DeleteSimilarAlbum(SimilarAlbum instance);
    partial void InsertSimilarArtist(SimilarArtist instance);
    partial void UpdateSimilarArtist(SimilarArtist instance);
    partial void DeleteSimilarArtist(SimilarArtist instance);
    partial void InsertSimilarTrack(SimilarTrack instance);
    partial void UpdateSimilarTrack(SimilarTrack instance);
    partial void DeleteSimilarTrack(SimilarTrack instance);
    partial void InsertTrackGenre(TrackGenre instance);
    partial void UpdateTrackGenre(TrackGenre instance);
    partial void DeleteTrackGenre(TrackGenre instance);
    partial void InsertTrack(Track instance);
    partial void UpdateTrack(Track instance);
    partial void DeleteTrack(Track instance);
    #endregion
		
		public Repository(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Repository(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Repository(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Repository(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AlbumGenre> AlbumGenres
		{
			get
			{
				return this.GetTable<AlbumGenre>();
			}
		}
		
		public System.Data.Linq.Table<Album> Albums
		{
			get
			{
				return this.GetTable<Album>();
			}
		}
		
		public System.Data.Linq.Table<ArtistGenre> ArtistGenres
		{
			get
			{
				return this.GetTable<ArtistGenre>();
			}
		}
		
		public System.Data.Linq.Table<Artist> Artists
		{
			get
			{
				return this.GetTable<Artist>();
			}
		}
		
		public System.Data.Linq.Table<Configuration> Configurations
		{
			get
			{
				return this.GetTable<Configuration>();
			}
		}
		
		public System.Data.Linq.Table<Genre> Genres
		{
			get
			{
				return this.GetTable<Genre>();
			}
		}
		
		public System.Data.Linq.Table<Image> Images
		{
			get
			{
				return this.GetTable<Image>();
			}
		}
		
		public System.Data.Linq.Table<MediaFile> MediaFiles
		{
			get
			{
				return this.GetTable<MediaFile>();
			}
		}
		
		public System.Data.Linq.Table<MediaRepository> MediaRepositories
		{
			get
			{
				return this.GetTable<MediaRepository>();
			}
		}
		
		public System.Data.Linq.Table<Play> Plays
		{
			get
			{
				return this.GetTable<Play>();
			}
		}
		
		public System.Data.Linq.Table<SimilarAlbum> SimilarAlbums
		{
			get
			{
				return this.GetTable<SimilarAlbum>();
			}
		}
		
		public System.Data.Linq.Table<SimilarArtist> SimilarArtists
		{
			get
			{
				return this.GetTable<SimilarArtist>();
			}
		}
		
		public System.Data.Linq.Table<SimilarTrack> SimilarTracks
		{
			get
			{
				return this.GetTable<SimilarTrack>();
			}
		}
		
		public System.Data.Linq.Table<TrackGenre> TrackGenres
		{
			get
			{
				return this.GetTable<TrackGenre>();
			}
		}
		
		public System.Data.Linq.Table<Track> Tracks
		{
			get
			{
				return this.GetTable<Track>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="AlbumGenres")]
	public partial class AlbumGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AlbumId;
		
		private System.Guid _GenreId;
		
		private System.Nullable<int> _Score;
		
		private EntityRef<Album> _Album;
		
		private EntityRef<Genre> _Genre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIdChanging(System.Guid value);
    partial void OnAlbumIdChanged();
    partial void OnGenreIdChanging(System.Guid value);
    partial void OnGenreIdChanged();
    partial void OnScoreChanging(System.Nullable<int> value);
    partial void OnScoreChanged();
    #endregion
		
		public AlbumGenre()
		{
			this._Album = default(EntityRef<Album>);
			this._Genre = default(EntityRef<Genre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AlbumId
		{
			get
			{
				return this._AlbumId;
			}
			set
			{
				if ((this._AlbumId != value))
				{
					if (this._Album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._AlbumId = value;
					this.SendPropertyChanged("AlbumId");
					this.OnAlbumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GenreId
		{
			get
			{
				return this._GenreId;
			}
			set
			{
				if ((this._GenreId != value))
				{
					if (this._Genre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenreIdChanging(value);
					this.SendPropertyChanging();
					this._GenreId = value;
					this.SendPropertyChanged("GenreId");
					this.OnGenreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_AlbumGenre", Storage="_Album", ThisKey="AlbumId", OtherKey="Id", IsForeignKey=true)]
		public Album Album
		{
			get
			{
				return this._Album.Entity;
			}
			set
			{
				Album previousValue = this._Album.Entity;
				if (((previousValue != value) 
							|| (this._Album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Album.Entity = null;
						previousValue.AlbumGenres.Remove(this);
					}
					this._Album.Entity = value;
					if ((value != null))
					{
						value.AlbumGenres.Add(this);
						this._AlbumId = value.Id;
					}
					else
					{
						this._AlbumId = default(System.Guid);
					}
					this.SendPropertyChanged("Album");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_AlbumGenre", Storage="_Genre", ThisKey="GenreId", OtherKey="Id", IsForeignKey=true)]
		public Genre Genre
		{
			get
			{
				return this._Genre.Entity;
			}
			set
			{
				Genre previousValue = this._Genre.Entity;
				if (((previousValue != value) 
							|| (this._Genre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Genre.Entity = null;
						previousValue.AlbumGenres.Remove(this);
					}
					this._Genre.Entity = value;
					if ((value != null))
					{
						value.AlbumGenres.Add(this);
						this._GenreId = value.Id;
					}
					else
					{
						this._GenreId = default(System.Guid);
					}
					this.SendPropertyChanged("Genre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Albums")]
	public partial class Album : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private System.Nullable<System.Guid> _MBID;
		
		private System.Nullable<System.DateTime> _ReleaseDate;
		
		private System.Nullable<long> _LastFMListeners;
		
		private System.Nullable<long> _LastFMPlays;
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ArtistId;
		
		private System.Nullable<System.DateTime> _LastUpdate;
		
		private EntitySet<AlbumGenre> _AlbumGenres;
		
		private EntitySet<Track> _Tracks;
		
		private EntityRef<Artist> _Artist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMBIDChanging(System.Nullable<System.Guid> value);
    partial void OnMBIDChanged();
    partial void OnReleaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReleaseDateChanged();
    partial void OnLastFMListenersChanging(System.Nullable<long> value);
    partial void OnLastFMListenersChanged();
    partial void OnLastFMPlaysChanging(System.Nullable<long> value);
    partial void OnLastFMPlaysChanged();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnArtistIdChanging(System.Nullable<System.Guid> value);
    partial void OnArtistIdChanged();
    partial void OnLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateChanged();
    #endregion
		
		public Album()
		{
			this._AlbumGenres = new EntitySet<AlbumGenre>(new Action<AlbumGenre>(this.attach_AlbumGenres), new Action<AlbumGenre>(this.detach_AlbumGenres));
			this._Tracks = new EntitySet<Track>(new Action<Track>(this.attach_Tracks), new Action<Track>(this.detach_Tracks));
			this._Artist = default(EntityRef<Artist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MBID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MBID
		{
			get
			{
				return this._MBID;
			}
			set
			{
				if ((this._MBID != value))
				{
					this.OnMBIDChanging(value);
					this.SendPropertyChanging();
					this._MBID = value;
					this.SendPropertyChanged("MBID");
					this.OnMBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReleaseDate
		{
			get
			{
				return this._ReleaseDate;
			}
			set
			{
				if ((this._ReleaseDate != value))
				{
					this.OnReleaseDateChanging(value);
					this.SendPropertyChanging();
					this._ReleaseDate = value;
					this.SendPropertyChanged("ReleaseDate");
					this.OnReleaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastFMListeners", DbType="BigInt")]
		public System.Nullable<long> LastFMListeners
		{
			get
			{
				return this._LastFMListeners;
			}
			set
			{
				if ((this._LastFMListeners != value))
				{
					this.OnLastFMListenersChanging(value);
					this.SendPropertyChanging();
					this._LastFMListeners = value;
					this.SendPropertyChanged("LastFMListeners");
					this.OnLastFMListenersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastFMPlays", DbType="BigInt")]
		public System.Nullable<long> LastFMPlays
		{
			get
			{
				return this._LastFMPlays;
			}
			set
			{
				if ((this._LastFMPlays != value))
				{
					this.OnLastFMPlaysChanging(value);
					this.SendPropertyChanging();
					this._LastFMPlays = value;
					this.SendPropertyChanged("LastFMPlays");
					this.OnLastFMPlaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtistId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ArtistId
		{
			get
			{
				return this._ArtistId;
			}
			set
			{
				if ((this._ArtistId != value))
				{
					if (this._Artist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtistIdChanging(value);
					this.SendPropertyChanging();
					this._ArtistId = value;
					this.SendPropertyChanged("ArtistId");
					this.OnArtistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_AlbumGenre", Storage="_AlbumGenres", ThisKey="Id", OtherKey="AlbumId")]
		public EntitySet<AlbumGenre> AlbumGenres
		{
			get
			{
				return this._AlbumGenres;
			}
			set
			{
				this._AlbumGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Track", Storage="_Tracks", ThisKey="Id", OtherKey="AlbumId")]
		public EntitySet<Track> Tracks
		{
			get
			{
				return this._Tracks;
			}
			set
			{
				this._Tracks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artist_Album", Storage="_Artist", ThisKey="ArtistId", OtherKey="Id", IsForeignKey=true)]
		public Artist Artist
		{
			get
			{
				return this._Artist.Entity;
			}
			set
			{
				Artist previousValue = this._Artist.Entity;
				if (((previousValue != value) 
							|| (this._Artist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artist.Entity = null;
						previousValue.Albums.Remove(this);
					}
					this._Artist.Entity = value;
					if ((value != null))
					{
						value.Albums.Add(this);
						this._ArtistId = value.Id;
					}
					else
					{
						this._ArtistId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Artist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlbumGenres(AlbumGenre entity)
		{
			this.SendPropertyChanging();
			entity.Album = this;
		}
		
		private void detach_AlbumGenres(AlbumGenre entity)
		{
			this.SendPropertyChanging();
			entity.Album = null;
		}
		
		private void attach_Tracks(Track entity)
		{
			this.SendPropertyChanging();
			entity.Album = this;
		}
		
		private void detach_Tracks(Track entity)
		{
			this.SendPropertyChanging();
			entity.Album = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ArtistGenres")]
	public partial class ArtistGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Score;
		
		private System.Guid _GenreId;
		
		private System.Guid _ArtistId;
		
		private EntityRef<Artist> _Artist;
		
		private EntityRef<Genre> _Genre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnGenreIdChanging(System.Guid value);
    partial void OnGenreIdChanged();
    partial void OnArtistIdChanging(System.Guid value);
    partial void OnArtistIdChanged();
    #endregion
		
		public ArtistGenre()
		{
			this._Artist = default(EntityRef<Artist>);
			this._Genre = default(EntityRef<Genre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GenreId
		{
			get
			{
				return this._GenreId;
			}
			set
			{
				if ((this._GenreId != value))
				{
					if (this._Genre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenreIdChanging(value);
					this.SendPropertyChanging();
					this._GenreId = value;
					this.SendPropertyChanged("GenreId");
					this.OnGenreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtistId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ArtistId
		{
			get
			{
				return this._ArtistId;
			}
			set
			{
				if ((this._ArtistId != value))
				{
					if (this._Artist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtistIdChanging(value);
					this.SendPropertyChanging();
					this._ArtistId = value;
					this.SendPropertyChanged("ArtistId");
					this.OnArtistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artist_ArtistGenre", Storage="_Artist", ThisKey="ArtistId", OtherKey="Id", IsForeignKey=true)]
		public Artist Artist
		{
			get
			{
				return this._Artist.Entity;
			}
			set
			{
				Artist previousValue = this._Artist.Entity;
				if (((previousValue != value) 
							|| (this._Artist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artist.Entity = null;
						previousValue.ArtistGenres.Remove(this);
					}
					this._Artist.Entity = value;
					if ((value != null))
					{
						value.ArtistGenres.Add(this);
						this._ArtistId = value.Id;
					}
					else
					{
						this._ArtistId = default(System.Guid);
					}
					this.SendPropertyChanged("Artist");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_ArtistGenre", Storage="_Genre", ThisKey="GenreId", OtherKey="Id", IsForeignKey=true)]
		public Genre Genre
		{
			get
			{
				return this._Genre.Entity;
			}
			set
			{
				Genre previousValue = this._Genre.Entity;
				if (((previousValue != value) 
							|| (this._Genre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Genre.Entity = null;
						previousValue.ArtistGenres.Remove(this);
					}
					this._Genre.Entity = value;
					if ((value != null))
					{
						value.ArtistGenres.Add(this);
						this._GenreId = value.Id;
					}
					else
					{
						this._GenreId = default(System.Guid);
					}
					this.SendPropertyChanged("Genre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Artists")]
	public partial class Artist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private System.Nullable<System.Guid> _MBID;
		
		private System.Nullable<long> _LastFMListeners;
		
		private System.Nullable<long> _LastFMPlays;
		
		private System.Nullable<System.DateTime> _LastUpdate;
		
		private string _Bio;
		
		private System.Guid _Id;
		
		private string _Summary;
		
		private EntitySet<Album> _Albums;
		
		private EntitySet<ArtistGenre> _ArtistGenres;
		
		private EntitySet<Track> _Tracks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMBIDChanging(System.Nullable<System.Guid> value);
    partial void OnMBIDChanged();
    partial void OnLastFMListenersChanging(System.Nullable<long> value);
    partial void OnLastFMListenersChanged();
    partial void OnLastFMPlaysChanging(System.Nullable<long> value);
    partial void OnLastFMPlaysChanged();
    partial void OnLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateChanged();
    partial void OnBioChanging(string value);
    partial void OnBioChanged();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Artist()
		{
			this._Albums = new EntitySet<Album>(new Action<Album>(this.attach_Albums), new Action<Album>(this.detach_Albums));
			this._ArtistGenres = new EntitySet<ArtistGenre>(new Action<ArtistGenre>(this.attach_ArtistGenres), new Action<ArtistGenre>(this.detach_ArtistGenres));
			this._Tracks = new EntitySet<Track>(new Action<Track>(this.attach_Tracks), new Action<Track>(this.detach_Tracks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MBID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MBID
		{
			get
			{
				return this._MBID;
			}
			set
			{
				if ((this._MBID != value))
				{
					this.OnMBIDChanging(value);
					this.SendPropertyChanging();
					this._MBID = value;
					this.SendPropertyChanged("MBID");
					this.OnMBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastFMListeners", DbType="BigInt")]
		public System.Nullable<long> LastFMListeners
		{
			get
			{
				return this._LastFMListeners;
			}
			set
			{
				if ((this._LastFMListeners != value))
				{
					this.OnLastFMListenersChanging(value);
					this.SendPropertyChanging();
					this._LastFMListeners = value;
					this.SendPropertyChanged("LastFMListeners");
					this.OnLastFMListenersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastFMPlays", DbType="BigInt")]
		public System.Nullable<long> LastFMPlays
		{
			get
			{
				return this._LastFMPlays;
			}
			set
			{
				if ((this._LastFMPlays != value))
				{
					this.OnLastFMPlaysChanging(value);
					this.SendPropertyChanging();
					this._LastFMPlays = value;
					this.SendPropertyChanged("LastFMPlays");
					this.OnLastFMPlaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bio", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Bio
		{
			get
			{
				return this._Bio;
			}
			set
			{
				if ((this._Bio != value))
				{
					this.OnBioChanging(value);
					this.SendPropertyChanging();
					this._Bio = value;
					this.SendPropertyChanged("Bio");
					this.OnBioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(255)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artist_Album", Storage="_Albums", ThisKey="Id", OtherKey="ArtistId")]
		public EntitySet<Album> Albums
		{
			get
			{
				return this._Albums;
			}
			set
			{
				this._Albums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artist_ArtistGenre", Storage="_ArtistGenres", ThisKey="Id", OtherKey="ArtistId")]
		public EntitySet<ArtistGenre> ArtistGenres
		{
			get
			{
				return this._ArtistGenres;
			}
			set
			{
				this._ArtistGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artist_Track", Storage="_Tracks", ThisKey="Id", OtherKey="ArtistId")]
		public EntitySet<Track> Tracks
		{
			get
			{
				return this._Tracks;
			}
			set
			{
				this._Tracks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Albums(Album entity)
		{
			this.SendPropertyChanging();
			entity.Artist = this;
		}
		
		private void detach_Albums(Album entity)
		{
			this.SendPropertyChanging();
			entity.Artist = null;
		}
		
		private void attach_ArtistGenres(ArtistGenre entity)
		{
			this.SendPropertyChanging();
			entity.Artist = this;
		}
		
		private void detach_ArtistGenres(ArtistGenre entity)
		{
			this.SendPropertyChanging();
			entity.Artist = null;
		}
		
		private void attach_Tracks(Track entity)
		{
			this.SendPropertyChanging();
			entity.Artist = this;
		}
		
		private void detach_Tracks(Track entity)
		{
			this.SendPropertyChanging();
			entity.Artist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Configuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Key;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Configuration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Genres")]
	public partial class Genre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private System.Guid _Id;
		
		private EntitySet<AlbumGenre> _AlbumGenres;
		
		private EntitySet<ArtistGenre> _ArtistGenres;
		
		private EntitySet<TrackGenre> _TrackGenres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    #endregion
		
		public Genre()
		{
			this._AlbumGenres = new EntitySet<AlbumGenre>(new Action<AlbumGenre>(this.attach_AlbumGenres), new Action<AlbumGenre>(this.detach_AlbumGenres));
			this._ArtistGenres = new EntitySet<ArtistGenre>(new Action<ArtistGenre>(this.attach_ArtistGenres), new Action<ArtistGenre>(this.detach_ArtistGenres));
			this._TrackGenres = new EntitySet<TrackGenre>(new Action<TrackGenre>(this.attach_TrackGenres), new Action<TrackGenre>(this.detach_TrackGenres));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_AlbumGenre", Storage="_AlbumGenres", ThisKey="Id", OtherKey="GenreId")]
		public EntitySet<AlbumGenre> AlbumGenres
		{
			get
			{
				return this._AlbumGenres;
			}
			set
			{
				this._AlbumGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_ArtistGenre", Storage="_ArtistGenres", ThisKey="Id", OtherKey="GenreId")]
		public EntitySet<ArtistGenre> ArtistGenres
		{
			get
			{
				return this._ArtistGenres;
			}
			set
			{
				this._ArtistGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_TrackGenre", Storage="_TrackGenres", ThisKey="Id", OtherKey="GenreId")]
		public EntitySet<TrackGenre> TrackGenres
		{
			get
			{
				return this._TrackGenres;
			}
			set
			{
				this._TrackGenres.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlbumGenres(AlbumGenre entity)
		{
			this.SendPropertyChanging();
			entity.Genre = this;
		}
		
		private void detach_AlbumGenres(AlbumGenre entity)
		{
			this.SendPropertyChanging();
			entity.Genre = null;
		}
		
		private void attach_ArtistGenres(ArtistGenre entity)
		{
			this.SendPropertyChanging();
			entity.Genre = this;
		}
		
		private void detach_ArtistGenres(ArtistGenre entity)
		{
			this.SendPropertyChanging();
			entity.Genre = null;
		}
		
		private void attach_TrackGenres(TrackGenre entity)
		{
			this.SendPropertyChanging();
			entity.Genre = this;
		}
		
		private void detach_TrackGenres(TrackGenre entity)
		{
			this.SendPropertyChanging();
			entity.Genre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Images")]
	public partial class Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _LinkedId;
		
		private System.Data.Linq.Binary _ImageData;
		
		private int _Size;
		
		private int _Width;
		
		private int _Height;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnLinkedIdChanging(System.Guid value);
    partial void OnLinkedIdChanged();
    partial void OnImageDataChanging(System.Data.Linq.Binary value);
    partial void OnImageDataChanged();
    partial void OnSizeChanging(int value);
    partial void OnSizeChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    #endregion
		
		public Image()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LinkedId
		{
			get
			{
				return this._LinkedId;
			}
			set
			{
				if ((this._LinkedId != value))
				{
					this.OnLinkedIdChanging(value);
					this.SendPropertyChanging();
					this._LinkedId = value;
					this.SendPropertyChanged("LinkedId");
					this.OnLinkedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageData", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this.OnImageDataChanging(value);
					this.SendPropertyChanging();
					this._ImageData = value;
					this.SendPropertyChanged("ImageData");
					this.OnImageDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int NOT NULL")]
		public int Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MediaFiles")]
	public partial class MediaFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FullPath;
		
		private System.DateTime _DateAdded;
		
		private System.DateTime _LastModified;
		
		private long _Size;
		
		private string _FileType;
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _RepositoryId;
		
		private System.Guid _TrackId;
		
		private EntityRef<MediaRepository> _MediaRepository;
		
		private EntityRef<Track> _Track;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFullPathChanging(string value);
    partial void OnFullPathChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnLastModifiedChanging(System.DateTime value);
    partial void OnLastModifiedChanged();
    partial void OnSizeChanging(long value);
    partial void OnSizeChanged();
    partial void OnFileTypeChanging(string value);
    partial void OnFileTypeChanged();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRepositoryIdChanging(System.Nullable<System.Guid> value);
    partial void OnRepositoryIdChanged();
    partial void OnTrackIdChanging(System.Guid value);
    partial void OnTrackIdChanged();
    #endregion
		
		public MediaFile()
		{
			this._MediaRepository = default(EntityRef<MediaRepository>);
			this._Track = default(EntityRef<Track>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullPath", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string FullPath
		{
			get
			{
				return this._FullPath;
			}
			set
			{
				if ((this._FullPath != value))
				{
					this.OnFullPathChanging(value);
					this.SendPropertyChanging();
					this._FullPath = value;
					this.SendPropertyChanged("FullPath");
					this.OnFullPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime NOT NULL")]
		public System.DateTime LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="BigInt NOT NULL")]
		public long Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepositoryId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RepositoryId
		{
			get
			{
				return this._RepositoryId;
			}
			set
			{
				if ((this._RepositoryId != value))
				{
					if (this._MediaRepository.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepositoryIdChanging(value);
					this.SendPropertyChanging();
					this._RepositoryId = value;
					this.SendPropertyChanged("RepositoryId");
					this.OnRepositoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TrackId
		{
			get
			{
				return this._TrackId;
			}
			set
			{
				if ((this._TrackId != value))
				{
					if (this._Track.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackIdChanging(value);
					this.SendPropertyChanging();
					this._TrackId = value;
					this.SendPropertyChanged("TrackId");
					this.OnTrackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaRepository_MediaFile", Storage="_MediaRepository", ThisKey="RepositoryId", OtherKey="Id", IsForeignKey=true)]
		public MediaRepository MediaRepository
		{
			get
			{
				return this._MediaRepository.Entity;
			}
			set
			{
				MediaRepository previousValue = this._MediaRepository.Entity;
				if (((previousValue != value) 
							|| (this._MediaRepository.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaRepository.Entity = null;
						previousValue.MediaFiles.Remove(this);
					}
					this._MediaRepository.Entity = value;
					if ((value != null))
					{
						value.MediaFiles.Add(this);
						this._RepositoryId = value.Id;
					}
					else
					{
						this._RepositoryId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("MediaRepository");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Track_MediaFile", Storage="_Track", ThisKey="TrackId", OtherKey="Id", IsForeignKey=true)]
		public Track Track
		{
			get
			{
				return this._Track.Entity;
			}
			set
			{
				Track previousValue = this._Track.Entity;
				if (((previousValue != value) 
							|| (this._Track.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Track.Entity = null;
						previousValue.MediaFiles.Remove(this);
					}
					this._Track.Entity = value;
					if ((value != null))
					{
						value.MediaFiles.Add(this);
						this._TrackId = value.Id;
					}
					else
					{
						this._TrackId = default(System.Guid);
					}
					this.SendPropertyChanged("Track");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MediaRepositories")]
	public partial class MediaRepository : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Location;
		
		private System.Nullable<System.DateTime> _LastScanned;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Guid _Id;
		
		private EntitySet<MediaFile> _MediaFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnLastScannedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastScannedChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    #endregion
		
		public MediaRepository()
		{
			this._MediaFiles = new EntitySet<MediaFile>(new Action<MediaFile>(this.attach_MediaFiles), new Action<MediaFile>(this.detach_MediaFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(255)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastScanned", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastScanned
		{
			get
			{
				return this._LastScanned;
			}
			set
			{
				if ((this._LastScanned != value))
				{
					this.OnLastScannedChanging(value);
					this.SendPropertyChanging();
					this._LastScanned = value;
					this.SendPropertyChanged("LastScanned");
					this.OnLastScannedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaRepository_MediaFile", Storage="_MediaFiles", ThisKey="Id", OtherKey="RepositoryId")]
		public EntitySet<MediaFile> MediaFiles
		{
			get
			{
				return this._MediaFiles;
			}
			set
			{
				this._MediaFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MediaFiles(MediaFile entity)
		{
			this.SendPropertyChanging();
			entity.MediaRepository = this;
		}
		
		private void detach_MediaFiles(MediaFile entity)
		{
			this.SendPropertyChanging();
			entity.MediaRepository = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Plays")]
	public partial class Play : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _DatePlayed;
		
		private System.Nullable<double> _Percentage;
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _TrackId;
		
		private EntityRef<Track> _Track;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDatePlayedChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePlayedChanged();
    partial void OnPercentageChanging(System.Nullable<double> value);
    partial void OnPercentageChanged();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTrackIdChanging(System.Nullable<System.Guid> value);
    partial void OnTrackIdChanged();
    #endregion
		
		public Play()
		{
			this._Track = default(EntityRef<Track>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePlayed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePlayed
		{
			get
			{
				return this._DatePlayed;
			}
			set
			{
				if ((this._DatePlayed != value))
				{
					this.OnDatePlayedChanging(value);
					this.SendPropertyChanging();
					this._DatePlayed = value;
					this.SendPropertyChanged("DatePlayed");
					this.OnDatePlayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Float")]
		public System.Nullable<double> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TrackId
		{
			get
			{
				return this._TrackId;
			}
			set
			{
				if ((this._TrackId != value))
				{
					if (this._Track.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackIdChanging(value);
					this.SendPropertyChanging();
					this._TrackId = value;
					this.SendPropertyChanged("TrackId");
					this.OnTrackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Track_Play", Storage="_Track", ThisKey="TrackId", OtherKey="Id", IsForeignKey=true)]
		public Track Track
		{
			get
			{
				return this._Track.Entity;
			}
			set
			{
				Track previousValue = this._Track.Entity;
				if (((previousValue != value) 
							|| (this._Track.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Track.Entity = null;
						previousValue.Plays.Remove(this);
					}
					this._Track.Entity = value;
					if ((value != null))
					{
						value.Plays.Add(this);
						this._TrackId = value.Id;
					}
					else
					{
						this._TrackId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Track");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SimilarAlbums")]
	public partial class SimilarAlbum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Score;
		
		private System.Guid _AlbumId_1;
		
		private System.Guid _AlbumId_2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScoreChanging(string value);
    partial void OnScoreChanged();
    partial void OnAlbumId_1Changing(System.Guid value);
    partial void OnAlbumId_1Changed();
    partial void OnAlbumId_2Changing(System.Guid value);
    partial void OnAlbumId_2Changed();
    #endregion
		
		public SimilarAlbum()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId_1", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AlbumId_1
		{
			get
			{
				return this._AlbumId_1;
			}
			set
			{
				if ((this._AlbumId_1 != value))
				{
					this.OnAlbumId_1Changing(value);
					this.SendPropertyChanging();
					this._AlbumId_1 = value;
					this.SendPropertyChanged("AlbumId_1");
					this.OnAlbumId_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId_2", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AlbumId_2
		{
			get
			{
				return this._AlbumId_2;
			}
			set
			{
				if ((this._AlbumId_2 != value))
				{
					this.OnAlbumId_2Changing(value);
					this.SendPropertyChanging();
					this._AlbumId_2 = value;
					this.SendPropertyChanged("AlbumId_2");
					this.OnAlbumId_2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SimilarArtists")]
	public partial class SimilarArtist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Score;
		
		private System.Guid _ArtistId_1;
		
		private System.Guid _ArtistId_2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScoreChanging(string value);
    partial void OnScoreChanged();
    partial void OnArtistId_1Changing(System.Guid value);
    partial void OnArtistId_1Changed();
    partial void OnArtistId_2Changing(System.Guid value);
    partial void OnArtistId_2Changed();
    #endregion
		
		public SimilarArtist()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtistId_1", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ArtistId_1
		{
			get
			{
				return this._ArtistId_1;
			}
			set
			{
				if ((this._ArtistId_1 != value))
				{
					this.OnArtistId_1Changing(value);
					this.SendPropertyChanging();
					this._ArtistId_1 = value;
					this.SendPropertyChanged("ArtistId_1");
					this.OnArtistId_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtistId_2", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ArtistId_2
		{
			get
			{
				return this._ArtistId_2;
			}
			set
			{
				if ((this._ArtistId_2 != value))
				{
					this.OnArtistId_2Changing(value);
					this.SendPropertyChanging();
					this._ArtistId_2 = value;
					this.SendPropertyChanged("ArtistId_2");
					this.OnArtistId_2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SimilarTracks")]
	public partial class SimilarTrack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Score;
		
		private System.Guid _TrackId_1;
		
		private System.Guid _TrackId_2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScoreChanging(string value);
    partial void OnScoreChanged();
    partial void OnTrackId_1Changing(System.Guid value);
    partial void OnTrackId_1Changed();
    partial void OnTrackId_2Changing(System.Guid value);
    partial void OnTrackId_2Changed();
    #endregion
		
		public SimilarTrack()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackId_1", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TrackId_1
		{
			get
			{
				return this._TrackId_1;
			}
			set
			{
				if ((this._TrackId_1 != value))
				{
					this.OnTrackId_1Changing(value);
					this.SendPropertyChanging();
					this._TrackId_1 = value;
					this.SendPropertyChanged("TrackId_1");
					this.OnTrackId_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackId_2", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TrackId_2
		{
			get
			{
				return this._TrackId_2;
			}
			set
			{
				if ((this._TrackId_2 != value))
				{
					this.OnTrackId_2Changing(value);
					this.SendPropertyChanging();
					this._TrackId_2 = value;
					this.SendPropertyChanged("TrackId_2");
					this.OnTrackId_2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TrackGenres")]
	public partial class TrackGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Score;
		
		private System.Guid _TrackId;
		
		private System.Guid _GenreId;
		
		private EntityRef<Genre> _Genre;
		
		private EntityRef<Track> _Track;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnTrackIdChanging(System.Guid value);
    partial void OnTrackIdChanged();
    partial void OnGenreIdChanging(System.Guid value);
    partial void OnGenreIdChanged();
    #endregion
		
		public TrackGenre()
		{
			this._Genre = default(EntityRef<Genre>);
			this._Track = default(EntityRef<Track>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TrackId
		{
			get
			{
				return this._TrackId;
			}
			set
			{
				if ((this._TrackId != value))
				{
					if (this._Track.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackIdChanging(value);
					this.SendPropertyChanging();
					this._TrackId = value;
					this.SendPropertyChanged("TrackId");
					this.OnTrackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GenreId
		{
			get
			{
				return this._GenreId;
			}
			set
			{
				if ((this._GenreId != value))
				{
					if (this._Genre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenreIdChanging(value);
					this.SendPropertyChanging();
					this._GenreId = value;
					this.SendPropertyChanged("GenreId");
					this.OnGenreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_TrackGenre", Storage="_Genre", ThisKey="GenreId", OtherKey="Id", IsForeignKey=true)]
		public Genre Genre
		{
			get
			{
				return this._Genre.Entity;
			}
			set
			{
				Genre previousValue = this._Genre.Entity;
				if (((previousValue != value) 
							|| (this._Genre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Genre.Entity = null;
						previousValue.TrackGenres.Remove(this);
					}
					this._Genre.Entity = value;
					if ((value != null))
					{
						value.TrackGenres.Add(this);
						this._GenreId = value.Id;
					}
					else
					{
						this._GenreId = default(System.Guid);
					}
					this.SendPropertyChanged("Genre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Track_TrackGenre", Storage="_Track", ThisKey="TrackId", OtherKey="Id", IsForeignKey=true)]
		public Track Track
		{
			get
			{
				return this._Track.Entity;
			}
			set
			{
				Track previousValue = this._Track.Entity;
				if (((previousValue != value) 
							|| (this._Track.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Track.Entity = null;
						previousValue.TrackGenres.Remove(this);
					}
					this._Track.Entity = value;
					if ((value != null))
					{
						value.TrackGenres.Add(this);
						this._TrackId = value.Id;
					}
					else
					{
						this._TrackId = default(System.Guid);
					}
					this.SendPropertyChanged("Track");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tracks")]
	public partial class Track : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private int _Duration;
		
		private int _BPM;
		
		private int _BitRate;
		
		private string _Comments;
		
		private string _Composer;
		
		private int _DiscNumber;
		
		private System.Nullable<System.DateTime> _ReleaseDate;
		
		private int _SampleRate;
		
		private int _Year;
		
		private System.Nullable<System.Guid> _MBID;
		
		private long _LastFMListeners;
		
		private long _LastFMPlays;
		
		private string _Description;
		
		private int _Rating;
		
		private int _Score;
		
		private System.Guid _Id;
		
		private System.Guid _ArtistId;
		
		private System.Guid _AlbumId;
		
		private int _TrackNumber;
		
		private System.Nullable<System.DateTime> _LastUpdate;
		
		private EntitySet<MediaFile> _MediaFiles;
		
		private EntitySet<Play> _Plays;
		
		private EntitySet<TrackGenre> _TrackGenres;
		
		private EntityRef<Album> _Album;
		
		private EntityRef<Artist> _Artist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDurationChanging(int value);
    partial void OnDurationChanged();
    partial void OnBPMChanging(int value);
    partial void OnBPMChanged();
    partial void OnBitRateChanging(int value);
    partial void OnBitRateChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnComposerChanging(string value);
    partial void OnComposerChanged();
    partial void OnDiscNumberChanging(int value);
    partial void OnDiscNumberChanged();
    partial void OnReleaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReleaseDateChanged();
    partial void OnSampleRateChanging(int value);
    partial void OnSampleRateChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMBIDChanging(System.Nullable<System.Guid> value);
    partial void OnMBIDChanged();
    partial void OnLastFMListenersChanging(long value);
    partial void OnLastFMListenersChanged();
    partial void OnLastFMPlaysChanging(long value);
    partial void OnLastFMPlaysChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnArtistIdChanging(System.Guid value);
    partial void OnArtistIdChanged();
    partial void OnAlbumIdChanging(System.Guid value);
    partial void OnAlbumIdChanged();
    partial void OnTrackNumberChanging(int value);
    partial void OnTrackNumberChanged();
    partial void OnLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateChanged();
    #endregion
		
		public Track()
		{
			this._MediaFiles = new EntitySet<MediaFile>(new Action<MediaFile>(this.attach_MediaFiles), new Action<MediaFile>(this.detach_MediaFiles));
			this._Plays = new EntitySet<Play>(new Action<Play>(this.attach_Plays), new Action<Play>(this.detach_Plays));
			this._TrackGenres = new EntitySet<TrackGenre>(new Action<TrackGenre>(this.attach_TrackGenres), new Action<TrackGenre>(this.detach_TrackGenres));
			this._Album = default(EntityRef<Album>);
			this._Artist = default(EntityRef<Artist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int NOT NULL")]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPM", DbType="Int NOT NULL")]
		public int BPM
		{
			get
			{
				return this._BPM;
			}
			set
			{
				if ((this._BPM != value))
				{
					this.OnBPMChanging(value);
					this.SendPropertyChanging();
					this._BPM = value;
					this.SendPropertyChanged("BPM");
					this.OnBPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BitRate", DbType="Int NOT NULL")]
		public int BitRate
		{
			get
			{
				return this._BitRate;
			}
			set
			{
				if ((this._BitRate != value))
				{
					this.OnBitRateChanging(value);
					this.SendPropertyChanging();
					this._BitRate = value;
					this.SendPropertyChanged("BitRate");
					this.OnBitRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Composer", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Composer
		{
			get
			{
				return this._Composer;
			}
			set
			{
				if ((this._Composer != value))
				{
					this.OnComposerChanging(value);
					this.SendPropertyChanging();
					this._Composer = value;
					this.SendPropertyChanged("Composer");
					this.OnComposerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscNumber", DbType="Int NOT NULL")]
		public int DiscNumber
		{
			get
			{
				return this._DiscNumber;
			}
			set
			{
				if ((this._DiscNumber != value))
				{
					this.OnDiscNumberChanging(value);
					this.SendPropertyChanging();
					this._DiscNumber = value;
					this.SendPropertyChanged("DiscNumber");
					this.OnDiscNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReleaseDate
		{
			get
			{
				return this._ReleaseDate;
			}
			set
			{
				if ((this._ReleaseDate != value))
				{
					this.OnReleaseDateChanging(value);
					this.SendPropertyChanging();
					this._ReleaseDate = value;
					this.SendPropertyChanged("ReleaseDate");
					this.OnReleaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleRate", DbType="Int NOT NULL")]
		public int SampleRate
		{
			get
			{
				return this._SampleRate;
			}
			set
			{
				if ((this._SampleRate != value))
				{
					this.OnSampleRateChanging(value);
					this.SendPropertyChanging();
					this._SampleRate = value;
					this.SendPropertyChanged("SampleRate");
					this.OnSampleRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MBID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MBID
		{
			get
			{
				return this._MBID;
			}
			set
			{
				if ((this._MBID != value))
				{
					this.OnMBIDChanging(value);
					this.SendPropertyChanging();
					this._MBID = value;
					this.SendPropertyChanged("MBID");
					this.OnMBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastFMListeners", DbType="BigInt NOT NULL")]
		public long LastFMListeners
		{
			get
			{
				return this._LastFMListeners;
			}
			set
			{
				if ((this._LastFMListeners != value))
				{
					this.OnLastFMListenersChanging(value);
					this.SendPropertyChanging();
					this._LastFMListeners = value;
					this.SendPropertyChanged("LastFMListeners");
					this.OnLastFMListenersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastFMPlays", DbType="BigInt NOT NULL")]
		public long LastFMPlays
		{
			get
			{
				return this._LastFMPlays;
			}
			set
			{
				if ((this._LastFMPlays != value))
				{
					this.OnLastFMPlaysChanging(value);
					this.SendPropertyChanging();
					this._LastFMPlays = value;
					this.SendPropertyChanged("LastFMPlays");
					this.OnLastFMPlaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtistId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ArtistId
		{
			get
			{
				return this._ArtistId;
			}
			set
			{
				if ((this._ArtistId != value))
				{
					if (this._Artist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtistIdChanging(value);
					this.SendPropertyChanging();
					this._ArtistId = value;
					this.SendPropertyChanged("ArtistId");
					this.OnArtistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AlbumId
		{
			get
			{
				return this._AlbumId;
			}
			set
			{
				if ((this._AlbumId != value))
				{
					if (this._Album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._AlbumId = value;
					this.SendPropertyChanged("AlbumId");
					this.OnAlbumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackNumber", DbType="Int NOT NULL")]
		public int TrackNumber
		{
			get
			{
				return this._TrackNumber;
			}
			set
			{
				if ((this._TrackNumber != value))
				{
					this.OnTrackNumberChanging(value);
					this.SendPropertyChanging();
					this._TrackNumber = value;
					this.SendPropertyChanged("TrackNumber");
					this.OnTrackNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Track_MediaFile", Storage="_MediaFiles", ThisKey="Id", OtherKey="TrackId")]
		public EntitySet<MediaFile> MediaFiles
		{
			get
			{
				return this._MediaFiles;
			}
			set
			{
				this._MediaFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Track_Play", Storage="_Plays", ThisKey="Id", OtherKey="TrackId")]
		public EntitySet<Play> Plays
		{
			get
			{
				return this._Plays;
			}
			set
			{
				this._Plays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Track_TrackGenre", Storage="_TrackGenres", ThisKey="Id", OtherKey="TrackId")]
		public EntitySet<TrackGenre> TrackGenres
		{
			get
			{
				return this._TrackGenres;
			}
			set
			{
				this._TrackGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Track", Storage="_Album", ThisKey="AlbumId", OtherKey="Id", IsForeignKey=true)]
		public Album Album
		{
			get
			{
				return this._Album.Entity;
			}
			set
			{
				Album previousValue = this._Album.Entity;
				if (((previousValue != value) 
							|| (this._Album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Album.Entity = null;
						previousValue.Tracks.Remove(this);
					}
					this._Album.Entity = value;
					if ((value != null))
					{
						value.Tracks.Add(this);
						this._AlbumId = value.Id;
					}
					else
					{
						this._AlbumId = default(System.Guid);
					}
					this.SendPropertyChanged("Album");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artist_Track", Storage="_Artist", ThisKey="ArtistId", OtherKey="Id", IsForeignKey=true)]
		public Artist Artist
		{
			get
			{
				return this._Artist.Entity;
			}
			set
			{
				Artist previousValue = this._Artist.Entity;
				if (((previousValue != value) 
							|| (this._Artist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artist.Entity = null;
						previousValue.Tracks.Remove(this);
					}
					this._Artist.Entity = value;
					if ((value != null))
					{
						value.Tracks.Add(this);
						this._ArtistId = value.Id;
					}
					else
					{
						this._ArtistId = default(System.Guid);
					}
					this.SendPropertyChanged("Artist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MediaFiles(MediaFile entity)
		{
			this.SendPropertyChanging();
			entity.Track = this;
		}
		
		private void detach_MediaFiles(MediaFile entity)
		{
			this.SendPropertyChanging();
			entity.Track = null;
		}
		
		private void attach_Plays(Play entity)
		{
			this.SendPropertyChanging();
			entity.Track = this;
		}
		
		private void detach_Plays(Play entity)
		{
			this.SendPropertyChanging();
			entity.Track = null;
		}
		
		private void attach_TrackGenres(TrackGenre entity)
		{
			this.SendPropertyChanging();
			entity.Track = this;
		}
		
		private void detach_TrackGenres(TrackGenre entity)
		{
			this.SendPropertyChanging();
			entity.Track = null;
		}
	}
}
#pragma warning restore 1591
